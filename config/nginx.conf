user nginx nginx;
worker_processes auto;
pid /var/run/nginx.pid;

events {
  use epoll;
  accept_mutex on;
  worker_connections 2048;
}

http {
  gzip on;
  gzip_comp_level 4;
  gzip_min_length 200;
  gzip_types
    text/plain
    text/css
    application/json
    application/javascript
    application/x-javascript
    text/xml
    application/xml
    application/xml+rss
    text/javascript
    application/vnd.ms-fontobject
    application/x-font-ttf
    font/opentype
    image/svg+xml
    image/x-icon;

  server_tokens off;

  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log debug;

  include mime.types;
  default_type application/octet-stream;
  sendfile on;

  # Must read the body in 5 seconds.
  client_body_timeout 5;

  map $http_host $port {
    default 80;
    "~^[^\:]+:(?<p>\d+)$" $p;
  }

  server {
    listen 80;
    server_name _;
    # keepalive_timeout 5;
    client_max_body_size 20M;

    location / {
      # A trick that makes it possible to distinguish websocket
      # from http traffic and route connections appropriately
      try_files /nonexistent @$http_upgrade;
    }

    location @ {
      proxy_pass       http://django:8000;
      proxy_redirect   off;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Server $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Port $port;
    }
  }

  map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
  }
}
